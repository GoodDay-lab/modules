#! /bin/python3
#
# This script is loading kernel module
#

import os
import sys

MODULE_NAME = "scull"
MODULE_FILE = "scull.ko"
MODULE_TYPE = "c"
MODULE_COUNT = 4

def parse_devices():
    result = {"c": {}, "b": {}}
    with open("/proc/devices", "r") as file:
        for line in file:
            line = line.strip()
            if not line: continue
            if line.startswith("Char") or line.startswith("Block"):
                local_type = line[0].lower()
                continue
            major, module_name = line.split()
            if module_name in result[local_type]: continue
            result[local_type][module_name] = {"major": int(major)}
    return result

def install_module():
    if os.path.exists(MODULE_FILE):
        os.system(f"""
                  insmod {MODULE_FILE}
                  """)
        return 0
    exit(f"{MODULE_FILE} not found!")
    
def uninstall_module():
    devices = parse_devices()
    exists = MODULE_NAME in devices[MODULE_TYPE]
    if exists:
        os.system(f"""
                  rmmod {MODULE_NAME}
                  """)
        return 0
    print("Module not found nothing to unload!")
    return 1

def create_nodes(module_major):
    curdir = os.path.abspath(os.curdir)
    try:
        os.chdir("/dev")
        for i in range(MODULE_COUNT):
            os.system(f"""
                      mknod {MODULE_NAME}{i} {MODULE_TYPE} {module_major} {i}
                      chmod a+wr {MODULE_NAME}{i}
                      """)
    finally:
        os.chdir(curdir)

def remove_nodes():
    curdir = os.path.abspath(os.curdir)
    try:
        os.chdir("/dev")
        for i in range(MODULE_COUNT):
            os.remove(f"{MODULE_NAME}{i}")
    finally:
        os.chdir(curdir)

def main(program, command, *params):
    uid = os.getuid()
    if (uid != 0):
        print("You should get root-privilegies!")
        return 2

    if command == "load":
        install_module()
        devices = parse_devices()
        if (MODULE_NAME not in devices[MODULE_TYPE]):
            print("Module didn't load")
            return 1
        module = devices[MODULE_TYPE][MODULE_NAME]
        major = module["major"]
        create_nodes(major)
    elif command == "unload":
        remove_nodes()
        uninstall_module()
    else:
        print("Command not found!")
        return 1
    return 0
        


if __name__ == '__main__':
    exit(main(*sys.argv))
